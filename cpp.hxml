-main Main
-cp src
-cpp cpp


###########################################################################################################
-lib phantom
#--macro expresso.MasterCollector.get_instance()
#--macro expresso.MasterCollector.setGlobalOptions( [ "justForTestingPurposes", "threadTracking" ] )

-lib phantomExpressionist

--macro expresso.MasterCollector.setGlobalOptions( [ "justForTestingPurposes" ] )
--macro expresso.MasterCollector.setClassPaths( [ "src" ] )

# The classPaths are modified to fit the demands: [ "src/", "src/expresso/" ]
# So it sets a slash at the end of the string and replaces dots with slashes if given.

--macro TracerCollector.setLogFilePathName( "D:/IO/HAXE/_libraries/phantomExpressionist/logTrace" )
# Sets the output path for the logFile. This is optional and may be left out.
# If not set, the default folder is taken.

--macro addGlobalMetadata( '', '@:build(ExpressionTracer.getAndParseFields02())', true, true, false )
# Leave the pathFilter empty. To filter the classPaths use the --macro above.
# It is necessary to filter the classPaths, not to have the haxe-inherent classes and included libraries to
# be tracked. It would blow your compilation without any need.
# But you   c a n  track external libraries or haxe-inherent classes, if you want to. Decide wisely what library paths
# to track. Include them explicitely in the the macro function call
# --macro expresso.MasterCollector.setClassPaths( [ "src" ] )    above




